# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CD

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:

  # App:

  #   runs-on: ubuntu-latest
    
  #   defaults:
  #     run:
  #       working-directory: src/app

  #   strategy:
  #     matrix:
  #       node-version: [18.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@v1-node16
  #     with:
  #       role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #       aws-region: us-east-1

  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #       cache-dependency-path: src/app/package-lock.json

  #   - name: NPM Install
  #     run: npm ci
    
  #   - name: NPM Build
  #     run: npm run build --if-present
    
  #   - name: NPM Deploy
  #     run: npm run deploy

  API:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src/api/TransactionSorterBackend

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-east-1

    - name: Setup SAM
      uses: aws-actions/setup-sam@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Checkout
      uses: actions/checkout@v3

    - name: SAM Build
      run: sam build

    - name: SAM Deploy
      run: sam deploy --stack-name ts-api --s3-bucket ts-dotnet-api --capabilities CAPABILITY_IAM
